resource_types:
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource
- name: terraform
  type: docker-image
  source:
    repository: gcr.io/cloud-solutions-group/terraform-resource
    tag: latest
resources:
- name: terraform-google-named-ports
  type: git
  source:
    uri: {{tf_named_ports_source_repo}}
    branch: {{tf_named_ports_source_branch}}
- name: terraform
  type: terraform
  source:
    storage:
      driver: s3
      bucket: {{tf_backend_bucket}}
      bucket_path: terraform-google-named-ports/
      access_key_id: {{s3_compatible_access_key}}
      secret_access_key: {{s3_compatible_secret_key}}
      endpoint: https://storage.googleapis.com
    env:
      GOOGLE_PROJECT: {{project_id}}
      GOOGLE_CREDENTIALS: {{service_account_json}}
- name: once-a-day
  type: time
  source:
    interval: 1440m
- name: send-an-email
  type: email
  source:
    smtp:
      host: {{smtp_host}}
      port: {{smtp_port}}
      username: {{smtp_username}}
      password: {{smtp_password}}
    from: concourse@vicnastea.io
    to: [ {{maintainer_email}} ]


jobs:
###
# run-example-gke-named-ports
###
- name: run-example-gke-named-ports
  serial: true
  plan:
  - get: once-a-day
    trigger: true

  - get: terraform-google-named-ports
    trigger: false
  
  - put: terraform
    params:
      action: update
      env_name: tf-ex-gke-named-ports
      delete_on_failure: true
      terraform_source: terraform-google-named-ports/examples/gke-named-ports
      vars:
        network_name: tf-ci-gke-named-ports
        region: us-central1
        zone: us-central1-b
        gke_username: {{gke_username}}
        gke_password: {{gke_password}}
    on_failure:
      put: send-an-email
      params:
        subject_text: "Terraform example apply failed: ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
        body_text: "Terraform example apply failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
 
  - task: test-example-gke-named-ports
    on_failure:
      put: send-an-email
      params:
        subject: email/subject-failed
        body: email/body-failed
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: gcr.io/cloud-solutions-group/terraform-resource
          tag: beta-backend-helm
      inputs:
      - name: terraform
      run:
        path: bash
        args:
        - -exc
        - |
          set -o pipefail
          apk add --update jq

          EXP_NAME=$(jq -r '.port_name' terraform/metadata)
          EXP_PORT=$(jq -r '.port_number' terraform/metadata)
          INSTANCE_GROUP=$(jq -r '.instance_group_urls' terraform/metadata)
          NAMED_PORTS="$(gcloud compute instance-groups get-named-ports ${INSTANCE_GROUP} --format=json | jq -r '.[]|"\(.name)=\(.port)"' | tr '\n' ';')"

          MATCH="${EXP_NAME}=${EXP_PORT}"
          if [[ "${NAMED_PORTS}" =~ $MATCH ]]; then
            echo "PASS: Found named port: $MATCH"
          else
            echo "FAIL: Named port not found: $MATCH"
            exit 1
          fi

  - put: terraform
    get_params:
      action: destroy
    params:
      action: destroy
      env_name: tf-ex-gke-named-ports
      terraform_source: terraform-google-named-ports/example-gke-named-ports
      vars:
        network_name: tf-ci-gke-named-ports
        region: us-central1
        zone: us-central1-b
        gke_username: {{gke_username}}
        gke_password: {{gke_password}}
    on_failure:
      put: send-an-email
      params:
        subject_text: "Terraform example destroy failed: ${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}"
        body_text: "Terraform example destroy failed: ${ATC_EXTERNAL_URL}/teams/main/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"